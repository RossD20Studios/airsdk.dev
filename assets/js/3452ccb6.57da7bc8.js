"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[1413],{4137:function(e,t,o){o.d(t,{Zo:function(){return c},kt:function(){return u}});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function p(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=n.createContext({}),d=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):p(p({},t),e)),o},c=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),f=d(o),u=r,g=f["".concat(l,".").concat(u)]||f[u]||s[u]||i;return o?n.createElement(g,p(p({ref:t},c),{},{components:o})):n.createElement(g,p({ref:t},c))}));function u(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=o.length,p=new Array(i);p[0]=f;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:r,p[1]=a;for(var d=2;d<i;d++)p[d]=o[d];return n.createElement.apply(null,p)}return n.createElement.apply(null,o)}f.displayName="MDXCreateElement"},5415:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return c},default:function(){return f}});var n=o(7462),r=o(3366),i=(o(7294),o(4137)),p=["components"],a={title:"ADT Android application profiling options",sidebar_label:"Android application profiling",sidebar_position:4},l=void 0,d={unversionedId:"building/air-developer-tool/option-sets/android-application-profiling-options",id:"building/air-developer-tool/option-sets/android-application-profiling-options",isDocsHomePage:!1,title:"ADT Android application profiling options",description:"When the target of the package is apk-profile, the profiler options can be used to specify which preloaded SWF file to use for performance and memory profiling. The profiler options use the following syntax:",source:"@site/docs/building/air-developer-tool/option-sets/android-application-profiling-options.md",sourceDirName:"building/air-developer-tool/option-sets",slug:"/building/air-developer-tool/option-sets/android-application-profiling-options",permalink:"/docs/building/air-developer-tool/option-sets/android-application-profiling-options",editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/building/air-developer-tool/option-sets/android-application-profiling-options.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"ADT Android application profiling options",sidebar_label:"Android application profiling",sidebar_position:4},sidebar:"mainSidebar",previous:{title:"Debugger connection",permalink:"/docs/building/air-developer-tool/option-sets/debugger-connection-options"},next:{title:"Native extension",permalink:"/docs/building/air-developer-tool/option-sets/native-extension-options"}},c=[{value:"<code>-preloadSWFPath</code>",id:"-preloadswfpath",children:[],level:3},{value:"<code>directory</code>",id:"directory",children:[],level:3}],s={toc:c};function f(e){var t=e.components,o=(0,r.Z)(e,p);return(0,i.kt)("wrapper",(0,n.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"When the target of the package is ",(0,i.kt)("inlineCode",{parentName:"p"},"apk-profile"),", the profiler options can be used to specify which preloaded SWF file to use for performance and memory profiling. The profiler options use the following syntax:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"-preloadSWFPath directory\n")),(0,i.kt)("h3",{id:"-preloadswfpath"},(0,i.kt)("inlineCode",{parentName:"h3"},"-preloadSWFPath")),(0,i.kt)("p",null,"If present, the app will attempt to find the preload SWF at the specified directory. If not specified, ADT includes the preload SWF file from the AIR SDK."),(0,i.kt)("h3",{id:"directory"},(0,i.kt)("inlineCode",{parentName:"h3"},"directory")),(0,i.kt)("p",null,"The directory containing the profiler preload SWF file."))}f.isMDXComponent=!0}}]);