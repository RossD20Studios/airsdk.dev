"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[4255],{4137:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=i,g=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return t?r.createElement(g,a(a({ref:n},d),{},{components:t})):r.createElement(g,a({ref:n},d))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5571:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return u}});var r=t(7462),i=t(3366),o=(t(7294),t(4137)),a=["components"],l={title:"ADT -sign",sidebar_label:"sign",sidebar_position:3},s=void 0,c={unversionedId:"building/air-developer-tool/commands/sign",id:"building/air-developer-tool/commands/sign",isDocsHomePage:!1,title:"ADT -sign",description:"The -sign command signs AIRI and ANE files.",source:"@site/docs/building/air-developer-tool/commands/sign.md",sourceDirName:"building/air-developer-tool/commands",slug:"/building/air-developer-tool/commands/sign",permalink:"/docs/building/air-developer-tool/commands/sign",editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/building/air-developer-tool/commands/sign.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"ADT -sign",sidebar_label:"sign",sidebar_position:3},sidebar:"mainSidebar",previous:{title:"prepare",permalink:"/docs/building/air-developer-tool/commands/prepare"},next:{title:"migrate",permalink:"/docs/building/air-developer-tool/commands/migrate"}},d=[{value:"<code>AIR_SIGNING_OPTIONS</code>",id:"air_signing_options",children:[],level:3},{value:"<code>input</code>",id:"input",children:[],level:3},{value:"<code>output</code>",id:"output",children:[],level:3}],p={toc:d};function u(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"-sign")," command signs AIRI and ANE files."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"-sign")," command uses the following syntax:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"adt -sign AIR_SIGNING_OPTIONS input output\n")),(0,o.kt)("h3",{id:"air_signing_options"},(0,o.kt)("inlineCode",{parentName:"h3"},"AIR_SIGNING_OPTIONS")),(0,o.kt)("p",null,"The AIR signing options identify the certificate used to sign a package file. The signing options are fully described in ",(0,o.kt)("a",{parentName:"p",href:"../option-sets/code-signing-options"},"ADT code signing options"),"."),(0,o.kt)("h3",{id:"input"},(0,o.kt)("inlineCode",{parentName:"h3"},"input")),(0,o.kt)("p",null,"The name of the AIRI or ANE file to sign."),(0,o.kt)("h3",{id:"output"},(0,o.kt)("inlineCode",{parentName:"h3"},"output")),(0,o.kt)("p",null,"The name of the signed package to create."),(0,o.kt)("p",null,"If an ANE file is already signed, the old signature is discarded. (AIR files cannot be resigned \u2014 to use a new signature for an application update, use the ",(0,o.kt)("a",{parentName:"p",href:"migrate"},(0,o.kt)("inlineCode",{parentName:"a"},"-migrate"))," command.)"))}u.isMDXComponent=!0}}]);