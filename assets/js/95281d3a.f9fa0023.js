"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[7253],{4137:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),u=s(r),m=o,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||i;return r?n.createElement(f,c(c({ref:t},d),{},{components:r})):n.createElement(f,c({ref:t},d))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,c=new Array(i);c[0]=u;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var s=2;s<i;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5956:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return d},default:function(){return u}});var n=r(7462),o=r(3366),i=(r(7294),r(4137)),c=["components"],a={title:"ADT -checkstore",sidebar_label:"checkstore",sidebar_position:5},l=void 0,s={unversionedId:"building/air-developer-tool/commands/checkstore",id:"building/air-developer-tool/commands/checkstore",isDocsHomePage:!1,title:"ADT -checkstore",description:"The -checkstore command lets you check the validity of a keystore. The command uses the following syntax:",source:"@site/docs/building/air-developer-tool/commands/checkstore.md",sourceDirName:"building/air-developer-tool/commands",slug:"/building/air-developer-tool/commands/checkstore",permalink:"/docs/building/air-developer-tool/commands/checkstore",editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/building/air-developer-tool/commands/checkstore.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"ADT -checkstore",sidebar_label:"checkstore",sidebar_position:5},sidebar:"mainSidebar",previous:{title:"migrate",permalink:"/docs/building/air-developer-tool/commands/migrate"},next:{title:"certificate",permalink:"/docs/building/air-developer-tool/commands/certificate"}},d=[{value:"<code>SIGNING_OPTIONS</code>",id:"signing_options",children:[],level:3}],p={toc:d};function u(e){var t=e.components,r=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"-checkstore")," command lets you check the validity of a keystore. The command uses the following syntax:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"adt -checkstore SIGNING_OPTIONS\n")),(0,i.kt)("h3",{id:"signing_options"},(0,i.kt)("inlineCode",{parentName:"h3"},"SIGNING_OPTIONS")),(0,i.kt)("p",null,"The signing options identifying the keystore to validate. The signing options are fully described in ",(0,i.kt)("a",{parentName:"p",href:"../option-sets/code-signing-options"},"ADT code signing options"),"."))}u.isMDXComponent=!0}}]);